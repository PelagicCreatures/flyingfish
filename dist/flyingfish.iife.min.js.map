{"version":3,"file":"flyingfish.iife.min.js","sources":["../lib/FlyingFish.js"],"sourcesContent":["/* \tMade in Barbados ðŸ‡§ðŸ‡§ Copyright Â© 2020-2021 Michael Rhodes */\n\nimport {\n\tSargasso, utils\n}\n\tfrom '@pelagiccreatures/sargasso'\n\nclass FlyingFish extends Sargasso {\n\tconstructor (element, options = {}) {\n\t\tsuper(element, {\n\t\t\twatchViewport: true\n\t\t})\n\t\tthis.triggered = false\n\t}\n\n\tenterViewport () {\n\t\tif (!this.triggered) {\n\t\t\tthis.triggered = true\n\n\t\t\tconst offload = `onmessage = async (e) => {\n\t\t\t\tconst response = await fetch(e.data.url)\n\t\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\t\tconst blob = await response.blob()\n\t\t\t\tself.postMessage({ uid: e.data.uid, blob: blob, contentType: contentType})\n\t\t\t}`\n\n\t\t\tthis.workerStart('FlyingFish', offload)\n\n\t\t\tlet imgUrl = this.element.getAttribute('data-src')\n\n\t\t\t// not fully qualified...\n\t\t\tif (!imgUrl.match(/^http/)) {\n\t\t\t\timgUrl = new URL(imgUrl, location.href).href\n\t\t\t}\n\n\t\t\t// hand the url to the worker for loading\n\t\t\tthis.workerPostMessage('FlyingFish', {\n\t\t\t\turl: imgUrl\n\t\t\t})\n\t\t}\n\t}\n\n\t// we got a message back from a worker\n\tworkerOnMessage (id, data) {\n\t\tif (id === 'FlyingFish') {\n\t\t\tthis.blobURL = URL.createObjectURL(data.blob)\n\t\t\tconst frame = () => {\n\t\t\t\tif (this.element.tagName === 'IMG') {\n\t\t\t\t\tthis.element.setAttribute('src', this.blobURL)\n\t\t\t\t} else {\n\t\t\t\t\tthis.element.style.backgroundImage = 'url(' + this.blobURL + ')'\n\t\t\t\t}\n\t\t\t\tthis.addClass('flying-fish-loaded')\n\t\t\t\tthis.sleep() // We're done. That was easy.\n\t\t\t}\n\t\t\tthis.queueFrame(frame)\n\t\t}\n\t\tsuper.workerOnMessage(id, data)\n\t}\n\n\tdestroy () {\n\t\tif (this.blobURL) {\n\t\t\tURL.revokeObjectURL(this.blobURL)\n\t\t}\n\t\tsuper.destroy()\n\t}\n}\n\nutils.registerSargassoClass('FlyingFish', FlyingFish)\n\nexport {\n\tFlyingFish\n}\n"],"names":["FlyingFish","Sargasso","[object Object]","element","options","super","watchViewport","this","triggered","offload","workerStart","imgUrl","getAttribute","match","URL","location","href","workerPostMessage","url","id","data","blobURL","createObjectURL","blob","frame","tagName","setAttribute","style","backgroundImage","addClass","sleep","queueFrame","workerOnMessage","revokeObjectURL","destroy","registerSargassoClass"],"mappings":"gDAOA,MAAMA,mBAAmBC,WACxBC,YAAaC,EAASC,EAAU,IAC/BC,MAAMF,EAAS,CACdG,eAAe,IAEhBC,KAAKC,WAAY,EAGlBN,gBACC,IAAKK,KAAKC,UAAW,CACpBD,KAAKC,WAAY,EAEjB,MAAMC,EAAU,2RAOhBF,KAAKG,YAAY,aAAcD,GAE/B,IAAIE,EAASJ,KAAKJ,QAAQS,aAAa,YAGlCD,EAAOE,MAAM,WACjBF,EAAS,IAAIG,IAAIH,EAAQI,SAASC,MAAMA,MAIzCT,KAAKU,kBAAkB,aAAc,CACpCC,IAAKP,KAMRT,gBAAiBiB,EAAIC,GACpB,GAAW,eAAPD,EAAqB,CACxBZ,KAAKc,QAAUP,IAAIQ,gBAAgBF,EAAKG,MACxC,MAAMC,MAAQ,KACgB,QAAzBjB,KAAKJ,QAAQsB,QAChBlB,KAAKJ,QAAQuB,aAAa,MAAOnB,KAAKc,SAEtCd,KAAKJ,QAAQwB,MAAMC,gBAAkB,OAASrB,KAAKc,QAAU,IAE9Dd,KAAKsB,SAAS,sBACdtB,KAAKuB,SAENvB,KAAKwB,WAAWP,OAEjBnB,MAAM2B,gBAAgBb,EAAIC,GAG3BlB,UACKK,KAAKc,SACRP,IAAImB,gBAAgB1B,KAAKc,SAE1BhB,MAAM6B,0BAIFC,sBAAsB,aAAcnC"}